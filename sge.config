#
# sge.config
# Config file for running Cromwell workflows on SGE backend
#
# Copyright (C) 2021 Anestis Gkanogiannis <anestis@gkanogiannis.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#

# Include the application.conf file.
include required(classpath("application"))

backend {
	# Switch the default backend to "SGE"
	default = "SGE"
	providers {

		# Configure the SGE backend
		SGE {
			# Use the config backend factory
			actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

			config {
				filesystems {
					local {
						localization: [
							"soft-link", "hard-link"
						]
						caching {
							duplication-strategy: [
								"soft-link", "hard-link"
							]
						}
					}
				}
				
				# Limits the number of concurrent jobs
				concurrent-job-limit = 75
				exit-code-timeout-seconds = 300

				# Define runtime attributes for the SGE backend.
				# memory_gb is a special runtime attribute. See the cromwell README for more info.
				runtime-attributes = """
				Int cpu = 1
				Float? memory_mb
				String? my_job_name
				String? my_log
				"""

				# Script for submitting a job to SGE, using runtime attributes.
				# See the cromwell README for more info.
				submit = """
				mkdir -p `dirname ${my_log}` &&
				qsub \
					-terse \
					-V \
					-b n \
					-N ${my_job_name} \
					-wd ${cwd} \
					-o ${my_log}.out \
					-e ${my_log}.err \
					-pe mpich ${cpu} \
					${"-l mem_free=" + memory_mb + "m" + ",h_vmem=" + memory_mb + "m"} \
					${script}
				"""

				# command for killing/aborting
				kill = "qdel ${job_id}"

				# Command used at restart to check if a job is alive
				check-alive = "qstat -j ${job_id}"
				#check-alive = "sge_status ${job_id}"

				# How to search the submit output for a job_id
				job-id-regex = "(\\d+)"
			}
		}
	}
}
